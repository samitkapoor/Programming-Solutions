/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> result;
        
        if(root == nullptr) return result;
        
        queue<Node*> q;
        q.push(root);
        
        while(!q.empty()){
            queue<Node*> t;
            int n = q.size();
            
            vector<int> temp;
            
            for(int i=0 ; i<n ; i++){
                Node* f = q.front();
                q.pop();
                temp.push_back(f->val);    
                
                if(f->children.size() != 0){
                    for(auto x : f->children){
                        q.push(x);
                    }
                }
            }
            
            result.push_back(temp);
        }
        
        return result;
    }
};
